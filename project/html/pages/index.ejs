<html lang="en">
<head>
  <title>LiveSig App</title>
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <!-- First we import our css files -->
  <link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
  <!-- this app's own css -->
  <link rel="stylesheet" type="text/css" href="/css/main.css"/>
  <link rel="stylesheet" href="/css/signature-pad.css">
  <!-- Next import js files -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  <script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
</head>

<body onselectstart="return false">
  <div class="body-wrapper">
    <h1>Embedded HubSpot Form with Signature</h1>

    <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/embed/v2.js"></script>
    <script>
      hbspt.forms.create({
        region: "na1",
        portalId: "44060182",
        formId: "9b461b2d-c16f-4316-991b-85f7441f0005"
      });
/*
      // Find the div element with the class "hs-submit"
      const submitButton = document.querySelector('input.hs-button[type="submit"]');

      if (submitButton) {
        submitButton.id = 'submit-button';
      } else {
        console.log('Input with class "hs-button" not found.');
      }
      */

    </script>

    <!--form id="sigForm" action="/confirm" method="post">
      <div class="field-2col">
        <label for="name">First Name:</label>
        <input type="text" id="firstname" name="firstname" required>
        <label for="name">Last Name:</label>
        <input type="text" id="lastname" name="lastname" required>
      </div>

      <div class="field-2col">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>

        <label for="message">Message:</label>
        <textarea id="message" name="message" rows="4" required></textarea>
      </div>

      <div id="signature-pad" class="signature-pad">
        <div class="signature-pad--body">
          <canvas></canvas>
        </div>
        <div class="signature-pad--footer">
          <div class="description">Sign above</div>
  
          <div class="signature-pad--actions">
            <div>
              <button type="button" class="button clear" data-action="clear">Clear</button>
              <button type="button" class="button" data-action="undo">Undo</button>
  
            </div>
          </div>
        </div>
      </div>

      <input type="submit" value="Submit" data-action="save-png">
    </form-->

    <div id="signature-pad" class="signature-pad">
      <div class="signature-pad--body">
        <canvas></canvas>
      </div>
      <div class="signature-pad--footer">
        <div class="description">Sign above</div>

        <div class="signature-pad--actions">
          <div>
            <button type="button" class="button clear" data-action="clear">Clear</button>
            <button type="button" class="button" data-action="undo">Undo</button>

          </div>
        </div>
      </div>
    </div>

  </div>

  <script src="js/signature_pad.js"></script>
  <script src="js/app.js"></script>
  <script>
    /*
    document.addEventListener("DOMContentLoaded", function () {
      // Assuming "signaturePad" is the SignaturePad instance from your app.js
  
      const submitButton = document.querySelector('input.hs-button[type="submit"]');
      const forms = document.querySelectorAll('form[id^="hsForm_"]');

      if (forms.length > 0) {
        const sigForm = forms[0];
        console.log('Form found:', sigForm);
      } else {
        console.log('No form with an ID starting with "hsForm" found.');
      }
  
      // Add an event listener to the form submit button
      submitButton.addEventListener("click", function (event) {
        // Check if the signature pad is empty
        if (signaturePad.isEmpty()) {
          // Prevent form submission if the signature pad is empty
          event.preventDefault();
          alert("Please provide a signature first.");
        } else {
          // Perform the "save-png" action
          var dataURL = signaturePad.toDataURL();
          download(dataURL, "signature.png");

          // After saving, you can allow the form to submit
          sigForm.submit();
        }
      });
  
      // Add a listener to enable or disable the submit button based on the signature's status
      signaturePad.onBegin = function () {
        // Enable the submit button when the user starts drawing a signature
        submitButton.disabled = false;
      };
  
      signaturePad.onEnd = function () {
        // Check if the signature pad is empty when the user finishes drawing
        if (signaturePad.isEmpty()) {
          submitButton.disabled = true;
        }
      };
    });
    */
  </script>
</body>

</html>